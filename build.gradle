/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.4.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    
    id 'jacoco'
    
    id "org.sonarqube" version "2.8"
}

apply plugin : "java"

ext {
   javaMainClass = 'com.labs.prova.Application'
}
 
repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.2-jre'
    
    compile 'org.jsoup:jsoup:1.13.1'
    compile 'com.google.inject:guice:4.1.0'
    
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
    
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    
    testCompile "org.mockito:mockito-core:2.+"
}

application {
    // Define the main class for the application.
    mainClassName = 'com.labs.prova.Application'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        //to create coverage report in html
        html.destination file("${project.buildDir}/reports/coverage")
        //for XML
        xml.destination file("${project.buildDir}/reports/jacoco.xml")
    }
}

sonarqube {
    properties {
        property 'sonar.projectName', 'hexacta'
        property 'sonar.projectKey', 'hexacta'
        property 'sonar.core.codeCoveragePlugin', 'jacoco'
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco.xml'
    }
}